version: '2'

volumes:
  postgres_data: {}
  postgres_backup: {}
  teamcity_server_data: {}
  teamcity_server_logs: {}

services:

  postgres:
    build: ./postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backup:/backups
    env_file: .env
    restart: always

  teamcity-server:
    build: ./server
    volumes:
      - teamcity_server_data:/data/teamcity_server/datadir
      - teamcity_server_logs:/opt/teamcity/logs
    ports:
      - 8111:8111
    depends_on:
      - postgres
    env_file: .env
    restart: always

  teamcity-django-nodejs-agent:
    build: ./agents/django-nodejs
    env_file: .env
    restart: always

  nginx:
    image: nginx
    links:
      - teamcity-server
    volumes:
      - "./server/tc.conf:/etc/nginx/conf.d/default.conf"
    environment:
      # set your domain name and email!
      VIRTUAL_HOST: ci.example.com
      LETSENCRYPT_HOST: ci.example.com
      LETSENCRYPT_EMAIL: username@example.ru

  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./nginx/vhost.d:/etc/nginx/vhost.d"
      - "./nginx/html:/usr/share/nginx/html"
      - "./nginx/certs:/etc/nginx/certs"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "./server/proxy.conf:/etc/nginx/conf.d/proxy.conf"

  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    volumes_from:
      - "nginx-proxy"